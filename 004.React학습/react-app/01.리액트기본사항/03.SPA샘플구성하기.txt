[ SPA 샘플 구성하기 ]

-> 1차로 메인을 구성후 쉐도잉프로젝트 
04.DC_PJ로 이동후 상세구현할 예정!

1.샘플 타겟 사이트: https://www.dc.com/

2.구성: 
상단영역(로고,메뉴) + 
메인영역(대문이미지) + 
하단영역(회사정보,하단링크)

3.모듈구성: JS파일로 구성(컴포넌트)
    (1) 데이터 모듈 - 이미지경로 데이터
    (2) 메인 페이지 레이아웃 모듈
    (3) 각 페이지(메인+서브) 모듈

4. 적용 리액트 기술
    (1) 리액트 라우터
    (2) 리액트 스타일링

[ 리액트 SPA 어플리케이션 구성 ]

1. node_modules : 
설치된 리액트 라이브러리 모듈설치폴더
-> 이 파일은 깃허브에 올려지지 않도록 gitignore
파일에서 예외경로로 등록되어 있어야한다!
(기본적으로는 자동 등록되어 있음-> 확인필수!)

2. public : 
index.html 이 포함된 메인 페이지 폴더
-> 여기에 이미지폴더 위치!
-> 정적컨텐츠를 모두 여기에 위치시킨다!
(주의: 이미지를 만약 src폴더에 넣으면
경로를 읽지 못한다!)

3. src : 
public 에서 사용하는 모듈 저장 폴더
-> 구성하고자 하는 컴포넌트 JSX파일들을 여기에위치

4. package.json
- 개발환경에 설치된 파일을 등록해준다(관리파일)

5. package-lock.json
- 개발환경에 설치된 파일의 모든 설치경로 및
등록정보를 기록하며 npm ci명령어로 복원설치시
이 파일을 기준하여 설치하게 된다!

6. .gitignore 파일
- 깃허브 소스 관리시 제외할 파일/폴더를 지정하여
불필요한 리스소 낭비를 막는다!

___________________________________

[ SPA 프로그램 진입점은 어디인가? ]

1. 시작페이지 : public/index.html
2. 시작JS : src/index.js
-> index.js가 중심모듈 파일 이므로
    여기에 모든 컴포넌트를 연결시킨다!
    (리액트 라우터를 사용해서 확장성을 높인다!)
__________________________________________

[ 리액트 SPA 노드JS 개발환경의 특징 ]

1. JSX 파일 형식을 JS확장로 표시할 수 있다!
    (js파일형식에서 JSX형식 사용가능!)
2. 모든 import 에서 JS파일은 확장자생략가능
3. import로 간편하게 팩키지 모듈을 불러올 수 있다
    (만약 import가 필요한 팩키지를 코딩할 경우 
    자동으로 넣어준다! 그런데 안될 수 도 있다...)
4. 모듈별 CSS는 개별모듈JS파일에서 import할 수 있다
5. 실시간 개발가상서버 모드에서는 변경사항을
    바로 브라우저로 반영하고 에러시 바로 에러메시지를
    브라우저에 찍어준다!
______________________________________

[ 모듈별 명명법의 일반형 ]
- 보통 모듈의 JS파일명 = CSS파일명 으로 같은
이름으로 연결성을 표현하는것이 일반적이다!
예) App.js = app.css
-> 주의: JS 파일명이 대문자로 시작하는 경우는
컴포넌트명이 대문자로 시작하기 때문인 경우가 많다!
